<tal:block metal:use-macro="here/templates/macros/page2">
<tal:block metal:fill-slot="contentPane">

<form method="post" 
    name="BridgeDeviceDetail" tal:attributes="action string:${here/absolute_url_path}/${template/id}">

<tal:block metal:define-macro="BridgeDeviceFormList"
    tal:define="tableName string:BridgeDeviceFormList;
    objects here/BridgeInt/objectValuesAll;
    tabletitle string:Bridge Interfaces Table;
    batch python:here.ZenTableManager.getBatch(tableName,objects);
    menu_id string:BridgeInt;
    showfilterbox python:True;">
<input type='hidden' name='tableName' tal:attributes="value tableName" />
<input type="hidden" name="zenScreenName" tal:attributes="value template/id"/> 
    
<tal:block metal:use-macro="here/zenuimacros/macros/zentable">
<tal:block metal:fill-slot="zentablecontents">

<!-- BEGIN TABLE CONTENTS -->
    <tr tal:condition="objects">

<!-- if you use a simple class="tableheader" statement then you don't get the extra attributes that you
     get if you use the structure python:here.ZenTableManager.getTableHeader - like the column
     isn't sortable 
-->
<!--        <td class="tableheader" align=left>Port Name</td> -->

<!--  This works too - defining width attributes separately
        <th tal:define="attributes string:'width=20'" 
        tal:replace="structure python:here.ZenTableManager.getTableHeader(tableName,'RemoteAddress','Remote Address', attributes=attributes)"/>
-->

        <th tal:replace="structure python:here.ZenTableManager.getTableHeader(tableName,'Port','Port', attributes='width=5%')"/>
        <th tal:replace="structure python:here.ZenTableManager.getTableHeader(tableName,'RemoteAddress','Remote MAC', attributes='width=15%')"/>
        <th tal:replace="structure python:here.ZenTableManager.getTableHeader(tableName,'getRemoteInterface','Remote Interfaces', attributes='width=30%')"/>
        <th tal:replace="structure python:here.ZenTableManager.getTableHeader(tableName,'getRemoteDevice','Remote Device', attributes='width=25%')"/>

        <th tal:replace="structure python:here.ZenTableManager.getTableHeader(tableName,'PortStatus','Status Value ', attributes='width=15%')"/>

        <th tal:replace="structure python:here.ZenTableManager.getTableHeader(tableName,'PortStatus','Port Status', attributes='width=15')"/>
    </tr>
    <tr tal:condition="not:objects">
        <th class="tableheader" align="left" colspan="6">
            No Interfaces found. Double check you have the correct collector
            plugin and you have remodeled.
        </th>
    </tr>

<!-- the tal:repeat statement takes a variable name and an expression.  The expression should evaluate to a sequence - in this case the expression is "batch" and will be the table of values for the attributes / methods on the BridgeInt relation.
     The variable is a local variable - here the variable name "Bridge" is used.  For each repetition, the local variable is set to the current sequence element. -->

    <tal:block tal:repeat="Bridge batch">

<!-- In order to have our rows alternate colors, we'll use the useful TALES
attribute odd, which is True for every other item in a tal:repeat loop -->

    <tr tal:define="odd repeat/Bridge/odd"
        tal:attributes="class python:test(odd, 'odd', 'even')">

      <td class="tablevalues">
        <a class=tablevalues tal:content="Bridge/Port" 
        tal:attributes="href Bridge/getPrimaryUrlPath"/>
      </td>
      
      <td class="tablevalues" 
          tal:content="Bridge/RemoteAddress"/>
          
      <td class="tablevalues">
          <span tal:repeat="intobj Bridge/getRemoteInterfaces"         
                tal:content="structure intobj"/>
                
      <td class="tablevalues" tal:content="structure Bridge/getRemoteDevice"/>
      
      <td class="tablevalues" 
          tal:content="python:Bridge.PortStatus==3 and 'Learned (3)' or 'Not
          active (' + str(Bridge.PortStatus) + ')'"/>

      <td class="tablevalues" align="center">
      <img border="0"
        tal:attributes="src python:test(Bridge.PortStatus==3,
            here.getStatusImgSrc(0),
            here.getStatusImgSrc(3))" />
      </td>

     </tr>
    </tal:block>
    <tr>
        <td colspan="6" class="tableheader" align='center'>
        
<!-- The here/zenTableNavigation/macros/navtool doesn't seem to support table
filtering and "Show all" although it does support sorting. The
here/zenTableNavigation/macros/navbodypagedevice seems to support sorting,
filtering and breaking into pages / show all -->
<!--<form metal:use-macro="here/zenTableNavigation/macros/navtool"></form> -->
<span metal:use-macro="here/zenTableNavigation/macros/navbodypagedevice" />
        </td>
    </tr>

<!-- END TABLE CONTENTS -->

</tal:block>
</tal:block>
</tal:block>

</form>

</tal:block>
</tal:block>
